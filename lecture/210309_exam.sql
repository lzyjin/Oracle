
ALTER TABLE memberTb ADD (id VARCHAR2(10), pass VARCHAR2(20), name VARCHAR2(10), age INT);

INSERT INTO memberTb VALUES('0100', '1234', '이지은', 25);
INSERT INTO memberTb VALUES('0101', 'C33kimleechoi', '강한나', 30);
INSERT INTO memberTb VALUES('0102', 'snsd', '서주현', 28);

CREATE TABLE memberTb(
    id VARCHAR2(10)
);

SELECT *
FROM memberTb;

SELECT *
FROM EMPLOYEE;


DECLARE 

    V_EMP_NO EMPLOYEE.EMP_ID%TYPE;
    V_EMP_NAME EMPLOYEE.EMP_NAME%TYPE;
    V_BONUS EMPLOYEE.BONUS%TYPE;
    
BEGIN 

    SELECT EMP_ID, EMP_NAME, BONUS
    INTO V_EMP_NO, V_EMP_NAME, V_BONUS
    FROM EMPLOYEE
    WHERE EMP_ID = '&사번';
    
    IF
        V_BONUS IS NULL
    THEN 
        DBMS_OUTPUT.PUT_LINE('사번' || V_EMP_NO || '은 ' || V_EMP_NAME || ' 사원이고 커미션을 받지 않습니다.');
    ELSE
        DBMS_OUTPUT.PUT_LINE('사번' || V_EMP_NO || '은 ' || V_EMP_NAME || ' 사원이고 커미션을 ' || V_BONUS || ' 받습니다.');
    END IF;
    
END;
/

SET SERVEROUTPUT ON;
        
        
CREATE USER MYTEST IDENTIFIED BY MYTEST;
GRANT CREATE SESSION, CREATE TABLE, CREATE VIEW TO MYTEST;
        

CREATE TABLE NOTICE(
    NOTICENO NUMBER NOT NULL, 
    NOTICETITLE VARCHAR2(50) NOT NULL,
    NOTICEDATE DATE DEFAULT SYSDATE,
    NOTICEWRITER VARCHAR2(15) NOT NULL,
    NOTICECONTENT VARCHAR2(2000),
    "ORIGINAL FILEPATH" VARCHAR2(100),
    "RENAME FILEPATH" VARCHAR2(100)
    
);

DESC NOTICE;

COMMENT ON COLUMN NOTICE.NOTICENO IS '공지글번호';
COMMENT ON COLUMN NOTICE.NOTICETITLE IS '공지글제목';
COMMENT ON COLUMN NOTICE.NOTICEDATE IS '공지글등록날짜';
COMMENT ON COLUMN NOTICE.NOTICEWRITER IS '공지글작성자아이디';
COMMENT ON COLUMN NOTICE.NOTICECONTENT IS '공지글내용';
COMMENT ON COLUMN NOTICE."ORIGINAL FILEPATH" IS '첨부파일명';
COMMENT ON COLUMN NOTICE."RENAME FILEPATH" IS '변경된첨부파일명';


SELECT ROWNUM, N.*
FROM (
    SELECT *
    FROM NOTICE
    ORDER BY NOTICEDATE DESC
) N
WHERE ROWNUM <= 5;
 
 
 SELECT *
 FROM EMPLOYEE
 ORDER BY HIRE_DATE DESC;
 
 
 SELECT ROWNUM, E.*
 FROM (
    SELECT *
    FROM EMPLOYEE
    ORDER BY HIRE_DATE DESC
 ) E
 WHERE ROWNUM <= 5;
 
 
 
 
-- RANK() OVER(정렬기준) 
SELECT EMP_NAME, SALARY, RANK() OVER(ORDER BY SALARY DESC) AS 순위
FROM EMPLOYEE;

SELECT *
FROM (
    SELECT EMP_NAME, SALARY, RANK() OVER(ORDER BY SALARY DESC) AS 순위
    FROM EMPLOYEE
    )
WHERE 순위 BETWEEN 1 AND 3;


SELECT *
FROM (
    SELECT *, RANK() OVER(ORDER BY NOTICEDATE DESC) AS 최근등록순위
    FROM NOTICE
)
WHERE 최근등록순위 BETWEEN 1 AND 5;
 
 
       
        