
-- [Additional SELECT]

-- 1. 
SELECT STUDENT_NO, STUDENT_NAME, ENTRANCE_DATE
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY STUDENT_NAME;

-- 2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;

--3. 
SELECT PROFESSOR_NAME, PROFESSOR_SSN, 
      TO_NUMBER(EXTRACT(YEAR FROM SYSDATE))
       - (TO_NUMBER(SUBSTR(PROFESSOR_SSN, 1, 2)) + 
       CASE 
            WHEN SUBSTR(PROFESSOR_SSN, 8, 1) IN ('1', '2') THEN 1900 
            ELSE 2000
        END)+1 AS 나이
FROM TB_PROFESSOR
WHERE SUBSTR(professor_ssn, 8, 1) = '1';

-- 4.
SELECT SUBSTR(PROFESSOR_NAME, 2, 2) AS 나이
FROM TB_PROFESSOR;

-- 5. 
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM entrance_date) - (TO_NUMBER(SUBSTR(STUDENT_SSN, 1, 2))+1900) > 19;

-- 6. 2020년 크리스마스는 무슨요일?
SELECT TO_CHAR(TO_DATE('20/12/25', 'RR/MM/DD'), 'YYYY/MM/DD DAY' )
FROM DUAL;

-- 답지대로 
SELECT TO_CHAR(TO_DATE('201225'), 'DAY')
FROM DUAL;

-- 7
SELECT TO_DATE('99/10/11', 'YY/MM/DD')
FROM DUAL;

SELECT TO_DATE('49/10/11', 'YY/MM/DD')
FROM DUAL;

SELECT TO_DATE('99/10/11', 'RR/MM/DD')
FROM DUAL;

SELECT TO_DATE('49/10/11', 'RR/MM/DD')
FROM DUAL;

-- 8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO, 1, 1) != 'A';

-- 9. 
SELECT ROUND(AVG(POINT), 1) AS 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';
  
-- 10.
SELECT DEPARTMENT_NO, COUNT(*)
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

-- 11. 
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 12.
SELECT *
FROM TB_GRADE;

SELECT SUBSTR(TERM_NO, 1, 4) AS 년도, ROUND(AVG(POINT), 1) AS "년도 별 평점"
FROM TB_GRADE
GROUP BY SUBSTR(TERM_NO, 1, 4), STUDENT_NO
HAVING STUDENT_NO = 'A112113';

-- 13. -- 질문 해결!
SELECT *
FROM TB_STUDENT;

-- WHERE절로 ABSENCE_YN = 'Y'라고 쓰면 Y가 아닌 행을 출력하지 않기 때문에 SELECT문에 조건을 작성한다
-- COUNT(DECODE(ABSENCE_YN,'Y',8)) 여기서 마지막 매개변수는 아무값이나 들어와도 된다. 
-- Y의 대체값을 세기 위한 수단일 뿐.
SELECT DEPARTMENT_NO AS 학과코드명, COUNT(DECODE(ABSENCE_YN,'Y',8)) AS "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 14. 
SELECT STUDENT_NAME AS 동일이름, COUNT(*) AS "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(STUDENT_NAME) = 2
ORDER BY STUDENT_NAME;

-- 그룹함수 COUNT AVG SUM..에 대한 조건을 정할 때만 HAVING을 쓰고 나머지 일반 컬럼에 대한 조건은 WHERE을 쓴다
-- 그러니까 결국에 HAVING과 WHERE을 둘다 써도 되는 경우가 있다는 말. 

-- 15. 
SELECT *
FROM TB_GRADE;

SELECT NVL(SUBSTR(TERM_NO, 1, 4), ' ') AS 년도, NVL(SUBSTR(TERM_NO, 5, 2), ' ') AS 학기, ROUND(AVG(POINT), 1) AS 평점
FROM TB_GRADE
GROUP BY ROLLUP(SUBSTR(TERM_NO, 1, 4),SUBSTR(TERM_NO, 5, 2)), STUDENT_NO
HAVING STUDENT_NO = 'A112113'
ORDER BY SUBSTR(TERM_NO, 1, 4) ASC,SUBSTR(TERM_NO, 5, 2) ASC;


