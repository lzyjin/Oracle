
--  [ Additional SELECT - Option]

-- 질문 - 11(해결), 12(반해결), 13(반해결), 14

-- 1
SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT
ORDER BY 1;


-- 2
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN, 1, 6) DESC;


-- 3
SELECT STUDENT_NAME AS "학생 이름", STUDENT_NO AS 학번, STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_ADDRESS, 1, 2) IN ('경기','강원') 
      AND SUBSTR(STUDENT_NO, 1, 1) != 'A';
      
SELECT *
FROM TB_STUDENT;


-- 4
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY TO_NUMBER(SUBSTR(PROFESSOR_SSN, 1, 6));


-- 5
SELECT STUDENT_NO, TO_CHAR(POINT, '9.00')
FROM TB_GRADE
WHERE TERM_NO = '200402' AND CLASS_NO = 'C3118100'
ORDER BY 2 DESC, 1 DESC;


SELECT *
FROM TB_GRADE;



-- 6
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY 2;






-- 7 
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);



-- 8
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
    JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
    JOIN TB_PROFESSOR USING(PROFESSOR_NO);



-- 9
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
    JOIN TB_PROFESSOR USING(PROFESSOR_NO)
WHERE CATEGORY = '인문사회'
ORDER BY 2;




-- 10
SELECT STUDENT_NO, STUDENT_NAME, ROUND(AVG(POINT), 1)
FROM TB_STUDENT
    JOIN TB_GRADE USING(STUDENT_NO)
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY 1;







-- 11
SELECT DEPARTMENT_NAME, STUDENT_NAME, COACH_PROFESSOR_NO
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE STUDENT_NO = 'A313047';


SELECT DEPARTMENT_NAME, 
       STUDENT_NAME, 
       (SELECT PROFESSOR_NAME FROM TB_PROFESSOR    
                                JOIN TB_STUDENT USING(DEPARTMENT_NO)
                        WHERE (SELECT COACH_PROFESSOR_NO
                               FROM TB_STUDENT
                                 JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
                               WHERE STUDENT_NO = 'A313047'));


-- 답지 보고 참고했다 ㅎ.. 
SELECT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    JOIN TB_PROFESSOR ON PROFESSOR_NO = COACH_PROFESSOR_NO --USING(DEPARTMENT_NO)
WHERE STUDENT_NO = 'A313047';





-- 12
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
    JOIN TB_GRADE USING(STUDENT_NO)
    JOIN TB_CLASS USING(DEPARTMENT_NO)
WHERE SUBSTR(TERM_NO, 1, 4) = '2007' 
    AND CLASS_NAME = '인간관계론';

SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
    JOIN TB_GRADE USING(STUDENT_NO)
    JOIN TB_CLASS USING(CLASS_NO) -- 여기가 문제였다.. 
WHERE SUBSTR(TERM_NO, 1, 4) = '2007' 
    AND CLASS_NAME = '인간관계론';

SELECT *
FROM TB_STUDENT
    JOIN TB_GRADE USING(STUDENT_NO)
    JOIN TB_CLASS USING(DEPARTMENT_NO);

SELECT *
FROM TB_STUDENT
    JOIN TB_GRADE USING(STUDENT_NO)
    JOIN TB_CLASS USING(CLASS_NO);


-- 13
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_DEPARTMENT
    JOIN TB_CLASS USING(DEPARTMENT_NO)
WHERE CATEGORY = '예체능';

--답지 참고 
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
    LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
    LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY = '예체능' AND PROFESSOR_NO IS NULL;

SELECT *
FROM TB_CLASS
WHERE CLASS_NO IS NULL;




-- 14
SELECT STUDENT_NAME, COACH_PROFESSOR_NO
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과';


SELECT STUDENT_NAME, NVL(PROFESSOR_NAME, '지도교수 미지정')
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON (PROFESSOR_NO = COACH_PROFESSOR_NO)  -- left join 써야 지도교수null인 학생도 나와 
WHERE DEPARTMENT_NAME = '서반아어학과';




-- 15
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME, TRUNC(AVG(POINT), 2)
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4
ORDER BY STUDENT_NO;




-- 16
SELECT CLASS_NO, CLASS_NAME, TRUNC(AVG(POINT), 8)
FROM TB_CLASS
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    JOIN TB_GRADE USING(CLASS_NO)
WHERE DEPARTMENT_NAME = '환경조경학과' AND CLASS_TYPE = '전공선택'
GROUP BY CLASS_NO, CLASS_NAME;

SELECT *
FROM TB_DEPARTMENT;


-- 17
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = (SELECT DEPARTMENT_NAME 
                         FROM TB_DEPARTMENT 
                            JOIN TB_STUDENT USING(DEPARTMENT_NO)
                         WHERE STUDENT_NAME = '최경희');
                                



-- 18
-- 국어국문학과의 학생별 총 평점
SELECT DEPARTMENT_NAME, STUDENT_NAME, AVG(POINT)
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY DEPARTMENT_NAME, STUDENT_NAME;


SELECT E.*
FROM (
    SELECT STUDENT_NO, STUDENT_NAME
    FROM TB_STUDENT
        JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
        JOIN TB_GRADE USING(STUDENT_NO)
    WHERE DEPARTMENT_NAME = '국어국문학과'
    GROUP BY STUDENT_NO, STUDENT_NAME
    ORDER BY AVG(POINT) DESC
) E
WHERE ROWNUM = 1;




-- 19
SELECT DEPARTMENT_NAME, AVG(POINT)
FROM TB_DEPARTMENT
    JOIN TB_CLASS USING(DEPARTMENT_NO)
    JOIN TB_GRADE USING(CLASS_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
GROUP BY DEPARTMENT_NAME;


-- 환경조경학과가 속한 같은 계열(자연과학)학과 찾기  - 20개 
SELECT DEPARTMENT_NAME
FROM TB_DEPARTMENT
WHERE CATEGORY = (SELECT CATEGORY 
                  FROM TB_DEPARTMENT 
                  WHERE DEPARTMENT_NAME = '환경조경학과');


SELECT DEPARTMENT_NAME, AVG(POINT)
FROM TB_DEPARTMENT
    JOIN TB_CLASS USING(DEPARTMENT_NO)
    JOIN TB_GRADE USING(CLASS_NO)   
GROUP BY (SELECT DEPARTMENT_NAME 
          FROM TB_DEPARTMENT 
          WHERE CATEGORY = (SELECT CATEGORY 
                            FROM TB_DEPARTMENT 
                            WHERE DEPARTMENT_NAME = '환경조경학과'));
                            
                            
-- 결국 해냈다 !!!! 이게 답 ! 
SELECT DEPARTMENT_NAME, ROUND(AVG(POINT), 1)
FROM TB_DEPARTMENT
    JOIN TB_CLASS USING(DEPARTMENT_NO)
    JOIN TB_GRADE USING(CLASS_NO)
WHERE DEPARTMENT_NAME IN (SELECT DEPARTMENT_NAME 
                             FROM TB_DEPARTMENT 
                            WHERE CATEGORY = (SELECT CATEGORY 
                                             FROM TB_DEPARTMENT 
                                                WHERE DEPARTMENT_NAME = '환경조경학과'))
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME;
    






